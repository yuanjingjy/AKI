create materialized view yj_aki_finaleigen as
  WITH vital AS (
      SELECT ya.icustay_id, ya.charttime AS starttime, yb.charttime, yb.heartrate, yb.spo2, yb.resprate, yb.tempc
      FROM (mimiciii.yj_bpvital yb
          RIGHT JOIN mimiciii.yj_akicohort ya ON (((yb.icustay_id = ya.icustay_id) AND
                                                   ((yb.charttime >= (ya.charttime - '24:00:00' :: interval hour)) AND
                                                    (yb.charttime <= ya.charttime)))))
  ), addnisbp AS (
      SELECT vital.icustay_id,
             vital.starttime,
             vital.charttime,
             vital.heartrate,
             vital.spo2,
             vital.resprate,
             vital.tempc,
             sf.ni_sbp
      FROM (vital
          LEFT JOIN mimiciii.nisbp_full sf ON (((vital.icustay_id = sf.icustay_id) AND
                                                (vital.charttime = sf.charttime))))
  ), addnidbp AS (
      SELECT adns.icustay_id,
             adns.starttime,
             adns.charttime,
             adns.heartrate,
             adns.spo2,
             adns.resprate,
             adns.tempc,
             adns.ni_sbp,
             df.ni_dbp
      FROM (addnisbp adns
          LEFT JOIN mimiciii.nidbp_full df ON (((adns.icustay_id = df.icustay_id) AND (adns.charttime = df.charttime))))
  ), addnimbp AS (
      SELECT adbp.icustay_id,
             adbp.starttime,
             adbp.charttime,
             adbp.heartrate,
             adbp.spo2,
             adbp.resprate,
             adbp.tempc,
             adbp.ni_sbp,
             adbp.ni_dbp,
             mf.ni_mbp
      FROM (addnidbp adbp
          LEFT JOIN mimiciii.nimbp_full mf ON (((adbp.icustay_id = mf.icustay_id) AND (adbp.charttime = mf.charttime))))
  ), addsi AS (
      SELECT ambp.icustay_id,
             ambp.starttime,
             ambp.charttime,
             ambp.heartrate,
             ambp.spo2,
             ambp.resprate,
             ambp.tempc,
             ambp.ni_sbp,
             ambp.ni_dbp,
             ambp.ni_mbp,
             (ambp.heartrate / (ambp.ni_sbp) :: double precision) AS si
      FROM addnimbp ambp
  ), vital_final AS (
      SELECT addsi.icustay_id,
             max(addsi.heartrate)                                                                                     AS hr_max,
             min(addsi.heartrate)                                                                                     AS hr_min,
             avg(addsi.heartrate)                                                                                     AS hr_avg,
             stddev(addsi.heartrate)                                                                                  AS hr_std,
             percentile_cont(
               (0.5) :: double precision) WITHIN GROUP (ORDER BY addsi.heartrate)                                     AS hr_mid,
             percentile_cont(
               (0.25) :: double precision) WITHIN GROUP (ORDER BY addsi.heartrate)                                    AS hr_25,
             percentile_cont(
               (0.75) :: double precision) WITHIN GROUP (ORDER BY addsi.heartrate)                                    AS hr_75,
             max(addsi.resprate)                                                                                      AS rr_max,
             min(addsi.resprate)                                                                                      AS rr_min,
             avg(addsi.resprate)                                                                                      AS rr_avg,
             stddev(addsi.resprate)                                                                                   AS rr_std,
             percentile_cont(
               (0.5) :: double precision) WITHIN GROUP (ORDER BY addsi.resprate)                                      AS rr_mid,
             percentile_cont(
               (0.25) :: double precision) WITHIN GROUP (ORDER BY addsi.resprate)                                     AS rr_25,
             percentile_cont(
               (0.75) :: double precision) WITHIN GROUP (ORDER BY addsi.resprate)                                     AS rr_75,
             max(addsi.ni_sbp)                                                                                        AS sbp_max,
             min(addsi.ni_sbp)                                                                                        AS sbp_min,
             avg(addsi.ni_sbp)                                                                                        AS sbp_avg,
             stddev(addsi.ni_sbp)                                                                                     AS sbp_std,
             percentile_cont(
               (0.5) :: double precision) WITHIN GROUP (ORDER BY ((addsi.ni_sbp) :: double precision))                AS sbp_mid,
             percentile_cont(
               (0.25) :: double precision) WITHIN GROUP (ORDER BY ((addsi.ni_sbp) :: double precision))               AS sbp_25,
             percentile_cont(
               (0.75) :: double precision) WITHIN GROUP (ORDER BY ((addsi.ni_sbp) :: double precision))               AS sbp_75,
             max(addsi.ni_dbp)                                                                                        AS dbp_max,
             min(addsi.ni_dbp)                                                                                        AS dbp_min,
             avg(addsi.ni_dbp)                                                                                        AS dbp_avg,
             stddev(addsi.ni_dbp)                                                                                     AS dbp_std,
             percentile_cont(
               (0.5) :: double precision) WITHIN GROUP (ORDER BY ((addsi.ni_dbp) :: double precision))                AS dbp_mid,
             percentile_cont(
               (0.25) :: double precision) WITHIN GROUP (ORDER BY ((addsi.ni_dbp) :: double precision))               AS dbp_25,
             percentile_cont(
               (0.75) :: double precision) WITHIN GROUP (ORDER BY ((addsi.ni_dbp) :: double precision))               AS dbp_75,
             max(addsi.ni_mbp)                                                                                        AS mbp_max,
             min(addsi.ni_mbp)                                                                                        AS mbp_min,
             avg(addsi.ni_mbp)                                                                                        AS mbp_avg,
             stddev(addsi.ni_mbp)                                                                                     AS mbp_std,
             percentile_cont(
               (0.5) :: double precision) WITHIN GROUP (ORDER BY ((addsi.ni_mbp) :: double precision))                AS mbp_mid,
             percentile_cont(
               (0.25) :: double precision) WITHIN GROUP (ORDER BY ((addsi.ni_mbp) :: double precision))               AS mbp_25,
             percentile_cont(
               (0.75) :: double precision) WITHIN GROUP (ORDER BY ((addsi.ni_mbp) :: double precision))               AS mbp_75,
             max(addsi.si)                                                                                            AS si_max,
             min(addsi.si)                                                                                            AS si_min,
             avg(addsi.si)                                                                                            AS si_avg,
             stddev(addsi.si)                                                                                         AS si_std,
             percentile_cont(
               (0.5) :: double precision) WITHIN GROUP (ORDER BY addsi.si)                                            AS si_mid,
             percentile_cont(
               (0.25) :: double precision) WITHIN GROUP (ORDER BY addsi.si)                                           AS si_25,
             percentile_cont(
               (0.75) :: double precision) WITHIN GROUP (ORDER BY addsi.si)                                           AS si_75,
             max(addsi.spo2)                                                                                          AS spo2_max,
             min(addsi.spo2)                                                                                          AS spo2_min,
             avg(addsi.spo2)                                                                                          AS spo2_avg,
             stddev(addsi.spo2)                                                                                       AS spo2_std,
             percentile_cont(
               (0.5) :: double precision) WITHIN GROUP (ORDER BY addsi.spo2)                                          AS spo2_mid,
             percentile_cont(
               (0.25) :: double precision) WITHIN GROUP (ORDER BY addsi.spo2)                                         AS spo2_25,
             percentile_cont(
               (0.75) :: double precision) WITHIN GROUP (ORDER BY addsi.spo2)                                         AS spo2_75,
             max(addsi.tempc)                                                                                         AS tem_max,
             min(addsi.tempc)                                                                                         AS tem_min,
             avg(addsi.tempc)                                                                                         AS tem_avg,
             stddev(addsi.tempc)                                                                                      AS tem_std,
             percentile_cont(
               (0.5) :: double precision) WITHIN GROUP (ORDER BY addsi.tempc)                                         AS tem_mid,
             percentile_cont(
               (0.25) :: double precision) WITHIN GROUP (ORDER BY addsi.tempc)                                        AS tem_25,
             percentile_cont(
               (0.75) :: double precision) WITHIN GROUP (ORDER BY addsi.tempc)                                        AS tem_75
      FROM addsi
      GROUP BY addsi.icustay_id
  ), pivo_uo AS (
      SELECT ya2.icustay_id, pu.urineoutput
      FROM (mimiciii.pivoted_uo pu
          RIGHT JOIN mimiciii.yj_akicohort ya2 ON (((pu.icustay_id = ya2.icustay_id) AND
                                                    ((pu.charttime >= (ya2.charttime - '24:00:00' :: interval hour)) AND
                                                     (pu.charttime <= ya2.charttime)) AND
                                                    (pu.urineoutput > (0) :: double precision) AND
                                                    (pu.urineoutput < (2500) :: double precision))))
  ), uo_tmp AS (
      SELECT pivo_uo.icustay_id,
             max(pivo_uo.urineoutput)                                                                AS uo_max,
             min(pivo_uo.urineoutput)                                                                AS uo_min,
             avg(pivo_uo.urineoutput)                                                                AS uo_avg,
             stddev(pivo_uo.urineoutput)                                                             AS uo_std,
             percentile_cont((0.5) :: double precision) WITHIN GROUP (ORDER BY pivo_uo.urineoutput)  AS uo_mid,
             percentile_cont((0.25) :: double precision) WITHIN GROUP (ORDER BY pivo_uo.urineoutput) AS uo_25,
             percentile_cont((0.75) :: double precision) WITHIN GROUP (ORDER BY pivo_uo.urineoutput) AS uo_75,
             sum(pivo_uo.urineoutput)                                                                AS uosum
      FROM pivo_uo
      GROUP BY pivo_uo.icustay_id
  ), adduo AS (
      SELECT vf.icustay_id,
             vf.hr_max,
             vf.hr_min,
             vf.hr_avg,
             vf.hr_std,
             vf.hr_mid,
             vf.hr_25,
             vf.hr_75,
             vf.rr_max,
             vf.rr_min,
             vf.rr_avg,
             vf.rr_std,
             vf.rr_mid,
             vf.rr_25,
             vf.rr_75,
             vf.sbp_max,
             vf.sbp_min,
             vf.sbp_avg,
             vf.sbp_std,
             vf.sbp_mid,
             vf.sbp_25,
             vf.sbp_75,
             vf.dbp_max,
             vf.dbp_min,
             vf.dbp_avg,
             vf.dbp_std,
             vf.dbp_mid,
             vf.dbp_25,
             vf.dbp_75,
             vf.mbp_max,
             vf.mbp_min,
             vf.mbp_avg,
             vf.mbp_std,
             vf.mbp_mid,
             vf.mbp_25,
             vf.mbp_75,
             vf.si_max,
             vf.si_min,
             vf.si_avg,
             vf.si_std,
             vf.si_mid,
             vf.si_25,
             vf.si_75,
             vf.spo2_max,
             vf.spo2_min,
             vf.spo2_avg,
             vf.spo2_std,
             vf.spo2_mid,
             vf.spo2_25,
             vf.spo2_75,
             vf.tem_max,
             vf.tem_min,
             vf.tem_avg,
             vf.tem_std,
             vf.tem_mid,
             vf.tem_25,
             vf.tem_75,
             ut.uo_max,
             ut.uo_min,
             ut.uo_avg,
             ut.uo_std,
             ut.uo_mid,
             ut.uo_25,
             ut.uo_75,
             ut.uosum
      FROM (uo_tmp ut
          LEFT JOIN vital_final vf ON ((ut.icustay_id = vf.icustay_id)))
  ), pivo_gcs AS (
      SELECT ya3.icustay_id, pg.gcs
      FROM (mimiciii.pivoted_gcs pg
          RIGHT JOIN mimiciii.yj_akicohort ya3 ON (((pg.icustay_id = ya3.icustay_id) AND
                                                    ((pg.charttime >= (ya3.charttime - '24:00:00' :: interval hour)) AND
                                                     (pg.charttime <= ya3.charttime)))))
  ), gcs_tmp AS (
      SELECT pivo_gcs.icustay_id,
             max(pivo_gcs.gcs)                                                                AS gcs_max,
             min(pivo_gcs.gcs)                                                                AS gcs_min,
             avg(pivo_gcs.gcs)                                                                AS gcs_avg,
             stddev(pivo_gcs.gcs)                                                             AS gcs_std,
             percentile_cont((0.5) :: double precision) WITHIN GROUP (ORDER BY pivo_gcs.gcs)  AS gcs_mid,
             percentile_cont((0.25) :: double precision) WITHIN GROUP (ORDER BY pivo_gcs.gcs) AS gcs_25,
             percentile_cont((0.75) :: double precision) WITHIN GROUP (ORDER BY pivo_gcs.gcs) AS gcs_75
      FROM pivo_gcs
      GROUP BY pivo_gcs.icustay_id
  ), addgcs AS (
      SELECT ya3.charttime AS akistarttime,
             ya3.creat,
             CASE
               WHEN (ya3.akistage = 0) THEN 0
               ELSE 1
                 END       AS classlabel,
             au.icustay_id,
             au.hr_max,
             au.hr_min,
             au.hr_avg,
             au.hr_std,
             au.hr_mid,
             au.hr_25,
             au.hr_75,
             au.rr_max,
             au.rr_min,
             au.rr_avg,
             au.rr_std,
             au.rr_mid,
             au.rr_25,
             au.rr_75,
             au.sbp_max,
             au.sbp_min,
             au.sbp_avg,
             au.sbp_std,
             au.sbp_mid,
             au.sbp_25,
             au.sbp_75,
             au.dbp_max,
             au.dbp_min,
             au.dbp_avg,
             au.dbp_std,
             au.dbp_mid,
             au.dbp_25,
             au.dbp_75,
             au.mbp_max,
             au.mbp_min,
             au.mbp_avg,
             au.mbp_std,
             au.mbp_mid,
             au.mbp_25,
             au.mbp_75,
             au.si_max,
             au.si_min,
             au.si_avg,
             au.si_std,
             au.si_mid,
             au.si_25,
             au.si_75,
             au.spo2_max,
             au.spo2_min,
             au.spo2_avg,
             au.spo2_std,
             au.spo2_mid,
             au.spo2_25,
             au.spo2_75,
             au.tem_max,
             au.tem_min,
             au.tem_avg,
             au.tem_std,
             au.tem_mid,
             au.tem_25,
             au.tem_75,
             au.uo_max,
             au.uo_min,
             au.uo_avg,
             au.uo_std,
             au.uo_mid,
             au.uo_25,
             au.uo_75,
             au.uosum,
             gt.gcs_max,
             gt.gcs_min,
             gt.gcs_avg,
             gt.gcs_std,
             gt.gcs_mid,
             gt.gcs_25,
             gt.gcs_75
      FROM ((gcs_tmp gt
          LEFT JOIN adduo au ON ((gt.icustay_id = au.icustay_id)))
          LEFT JOIN mimiciii.yj_akicohort ya3 ON ((gt.icustay_id = ya3.icustay_id)))
  ), addhw AS (
      SELECT DISTINCT ag.akistarttime,
                      ag.creat,
                      ag.classlabel,
                      ag.icustay_id,
                      ag.hr_max,
                      ag.hr_min,
                      ag.hr_avg,
                      ag.hr_std,
                      ag.hr_mid,
                      ag.hr_25,
                      ag.hr_75,
                      ag.rr_max,
                      ag.rr_min,
                      ag.rr_avg,
                      ag.rr_std,
                      ag.rr_mid,
                      ag.rr_25,
                      ag.rr_75,
                      ag.sbp_max,
                      ag.sbp_min,
                      ag.sbp_avg,
                      ag.sbp_std,
                      ag.sbp_mid,
                      ag.sbp_25,
                      ag.sbp_75,
                      ag.dbp_max,
                      ag.dbp_min,
                      ag.dbp_avg,
                      ag.dbp_std,
                      ag.dbp_mid,
                      ag.dbp_25,
                      ag.dbp_75,
                      ag.mbp_max,
                      ag.mbp_min,
                      ag.mbp_avg,
                      ag.mbp_std,
                      ag.mbp_mid,
                      ag.mbp_25,
                      ag.mbp_75,
                      ag.si_max,
                      ag.si_min,
                      ag.si_avg,
                      ag.si_std,
                      ag.si_mid,
                      ag.si_25,
                      ag.si_75,
                      ag.spo2_max,
                      ag.spo2_min,
                      ag.spo2_avg,
                      ag.spo2_std,
                      ag.spo2_mid,
                      ag.spo2_25,
                      ag.spo2_75,
                      ag.tem_max,
                      ag.tem_min,
                      ag.tem_avg,
                      ag.tem_std,
                      ag.tem_mid,
                      ag.tem_25,
                      ag.tem_75,
                      ag.uo_max,
                      ag.uo_min,
                      ag.uo_avg,
                      ag.uo_std,
                      ag.uo_mid,
                      ag.uo_25,
                      ag.uo_75,
                      ag.uosum,
                      ag.gcs_max,
                      ag.gcs_min,
                      ag.gcs_avg,
                      ag.gcs_std,
                      ag.gcs_mid,
                      ag.gcs_25,
                      ag.gcs_75,
                      hw.height_first AS height,
                      hw.weight_first AS weight
      FROM (addgcs ag
          LEFT JOIN mimiciii.heightweight hw ON ((ag.icustay_id = hw.icustay_id)))
  ), vaso AS (
      SELECT DISTINCT addhw.akistarttime,
                      addhw.creat,
                      addhw.classlabel,
                      addhw.icustay_id,
                      addhw.hr_max,
                      addhw.hr_min,
                      addhw.hr_avg,
                      addhw.hr_std,
                      addhw.hr_mid,
                      addhw.hr_25,
                      addhw.hr_75,
                      addhw.rr_max,
                      addhw.rr_min,
                      addhw.rr_avg,
                      addhw.rr_std,
                      addhw.rr_mid,
                      addhw.rr_25,
                      addhw.rr_75,
                      addhw.sbp_max,
                      addhw.sbp_min,
                      addhw.sbp_avg,
                      addhw.sbp_std,
                      addhw.sbp_mid,
                      addhw.sbp_25,
                      addhw.sbp_75,
                      addhw.dbp_max,
                      addhw.dbp_min,
                      addhw.dbp_avg,
                      addhw.dbp_std,
                      addhw.dbp_mid,
                      addhw.dbp_25,
                      addhw.dbp_75,
                      addhw.mbp_max,
                      addhw.mbp_min,
                      addhw.mbp_avg,
                      addhw.mbp_std,
                      addhw.mbp_mid,
                      addhw.mbp_25,
                      addhw.mbp_75,
                      addhw.si_max,
                      addhw.si_min,
                      addhw.si_avg,
                      addhw.si_std,
                      addhw.si_mid,
                      addhw.si_25,
                      addhw.si_75,
                      addhw.spo2_max,
                      addhw.spo2_min,
                      addhw.spo2_avg,
                      addhw.spo2_std,
                      addhw.spo2_mid,
                      addhw.spo2_25,
                      addhw.spo2_75,
                      addhw.tem_max,
                      addhw.tem_min,
                      addhw.tem_avg,
                      addhw.tem_std,
                      addhw.tem_mid,
                      addhw.tem_25,
                      addhw.tem_75,
                      addhw.uo_max,
                      addhw.uo_min,
                      addhw.uo_avg,
                      addhw.uo_std,
                      addhw.uo_mid,
                      addhw.uo_25,
                      addhw.uo_75,
                      addhw.uosum,
                      addhw.gcs_max,
                      addhw.gcs_min,
                      addhw.gcs_avg,
                      addhw.gcs_std,
                      addhw.gcs_mid,
                      addhw.gcs_25,
                      addhw.gcs_75,
                      addhw.height,
                      addhw.weight,
                      max(
                        CASE
                          WHEN (((vadu.starttime >= (addhw.akistarttime - '24:00:00' :: interval hour)) AND
                                 (vadu.starttime <= addhw.akistarttime)) OR
                                ((vadu.endtime >= (addhw.akistarttime - '24:00:00' :: interval hour)) AND
                                 (vadu.endtime <= addhw.akistarttime))) THEN 1
                          ELSE 0
                            END) OVER (PARTITION BY vadu.icustay_id
                        ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING) AS vaso
      FROM (addhw
          LEFT JOIN mimiciii.vasopressordurations vadu ON ((addhw.icustay_id = vadu.icustay_id)))
  ), vent AS (
      SELECT DISTINCT vaso.akistarttime,
                      vaso.creat,
                      vaso.classlabel,
                      vaso.icustay_id,
                      vaso.hr_max,
                      vaso.hr_min,
                      vaso.hr_avg,
                      vaso.hr_std,
                      vaso.hr_mid,
                      vaso.hr_25,
                      vaso.hr_75,
                      vaso.rr_max,
                      vaso.rr_min,
                      vaso.rr_avg,
                      vaso.rr_std,
                      vaso.rr_mid,
                      vaso.rr_25,
                      vaso.rr_75,
                      vaso.sbp_max,
                      vaso.sbp_min,
                      vaso.sbp_avg,
                      vaso.sbp_std,
                      vaso.sbp_mid,
                      vaso.sbp_25,
                      vaso.sbp_75,
                      vaso.dbp_max,
                      vaso.dbp_min,
                      vaso.dbp_avg,
                      vaso.dbp_std,
                      vaso.dbp_mid,
                      vaso.dbp_25,
                      vaso.dbp_75,
                      vaso.mbp_max,
                      vaso.mbp_min,
                      vaso.mbp_avg,
                      vaso.mbp_std,
                      vaso.mbp_mid,
                      vaso.mbp_25,
                      vaso.mbp_75,
                      vaso.si_max,
                      vaso.si_min,
                      vaso.si_avg,
                      vaso.si_std,
                      vaso.si_mid,
                      vaso.si_25,
                      vaso.si_75,
                      vaso.spo2_max,
                      vaso.spo2_min,
                      vaso.spo2_avg,
                      vaso.spo2_std,
                      vaso.spo2_mid,
                      vaso.spo2_25,
                      vaso.spo2_75,
                      vaso.tem_max,
                      vaso.tem_min,
                      vaso.tem_avg,
                      vaso.tem_std,
                      vaso.tem_mid,
                      vaso.tem_25,
                      vaso.tem_75,
                      vaso.uo_max,
                      vaso.uo_min,
                      vaso.uo_avg,
                      vaso.uo_std,
                      vaso.uo_mid,
                      vaso.uo_25,
                      vaso.uo_75,
                      vaso.uosum,
                      vaso.gcs_max,
                      vaso.gcs_min,
                      vaso.gcs_avg,
                      vaso.gcs_std,
                      vaso.gcs_mid,
                      vaso.gcs_25,
                      vaso.gcs_75,
                      vaso.height,
                      vaso.weight,
                      vaso.vaso,
                      max(
                        CASE
                          WHEN (((vend.starttime >= (vaso.akistarttime - '24:00:00' :: interval hour)) AND
                                 (vend.starttime <= vaso.akistarttime)) OR
                                ((vend.endtime >= (vaso.akistarttime - '24:00:00' :: interval hour)) AND
                                 (vend.endtime <= vaso.akistarttime))) THEN 1
                          ELSE 0
                            END) OVER (PARTITION BY vend.icustay_id
                        ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING) AS vent
      FROM (vaso
          LEFT JOIN mimiciii.ventdurations vend ON ((vaso.icustay_id = vend.icustay_id)))
  ), addbaseinfo AS (
      SELECT DISTINCT vent.akistarttime,
                      vent.creat,
                      vent.classlabel,
                      vent.icustay_id,
                      vent.hr_max,
                      vent.hr_min,
                      vent.hr_avg,
                      vent.hr_std,
                      vent.hr_mid,
                      vent.hr_25,
                      vent.hr_75,
                      vent.rr_max,
                      vent.rr_min,
                      vent.rr_avg,
                      vent.rr_std,
                      vent.rr_mid,
                      vent.rr_25,
                      vent.rr_75,
                      vent.sbp_max,
                      vent.sbp_min,
                      vent.sbp_avg,
                      vent.sbp_std,
                      vent.sbp_mid,
                      vent.sbp_25,
                      vent.sbp_75,
                      vent.dbp_max,
                      vent.dbp_min,
                      vent.dbp_avg,
                      vent.dbp_std,
                      vent.dbp_mid,
                      vent.dbp_25,
                      vent.dbp_75,
                      vent.mbp_max,
                      vent.mbp_min,
                      vent.mbp_avg,
                      vent.mbp_std,
                      vent.mbp_mid,
                      vent.mbp_25,
                      vent.mbp_75,
                      vent.si_max,
                      vent.si_min,
                      vent.si_avg,
                      vent.si_std,
                      vent.si_mid,
                      vent.si_25,
                      vent.si_75,
                      vent.spo2_max,
                      vent.spo2_min,
                      vent.spo2_avg,
                      vent.spo2_std,
                      vent.spo2_mid,
                      vent.spo2_25,
                      vent.spo2_75,
                      vent.tem_max,
                      vent.tem_min,
                      vent.tem_avg,
                      vent.tem_std,
                      vent.tem_mid,
                      vent.tem_25,
                      vent.tem_75,
                      vent.uo_max,
                      vent.uo_min,
                      vent.uo_avg,
                      vent.uo_std,
                      vent.uo_mid,
                      vent.uo_25,
                      vent.uo_75,
                      vent.uosum,
                      vent.gcs_max,
                      vent.gcs_min,
                      vent.gcs_avg,
                      vent.gcs_std,
                      vent.gcs_mid,
                      vent.gcs_25,
                      vent.gcs_75,
                      vent.height,
                      vent.weight,
                      vent.vaso,
                      vent.vent,
                      id.admission_age                                            AS age,
                      id.gender,
                      id.ethnicity,
                      id.admission_type,
                      id.hospital_expire_flag,
                      (((date_part('epoch' :: text, (vent.akistarttime - id.intime)) / (60.0) :: double precision) /
                        (60.0) :: double precision) / (24.0) :: double precision) AS lostime
      FROM (vent
          LEFT JOIN mimiciii.icustay_detail id ON ((vent.icustay_id = id.icustay_id)))
  )
  SELECT addbaseinfo.akistarttime,
         addbaseinfo.creat,
         addbaseinfo.classlabel,
         addbaseinfo.icustay_id,
         addbaseinfo.hr_max,
         addbaseinfo.hr_min,
         addbaseinfo.hr_avg,
         addbaseinfo.hr_std,
         addbaseinfo.hr_mid,
         addbaseinfo.hr_25,
         addbaseinfo.hr_75,
         addbaseinfo.rr_max,
         addbaseinfo.rr_min,
         addbaseinfo.rr_avg,
         addbaseinfo.rr_std,
         addbaseinfo.rr_mid,
         addbaseinfo.rr_25,
         addbaseinfo.rr_75,
         addbaseinfo.sbp_max,
         addbaseinfo.sbp_min,
         addbaseinfo.sbp_avg,
         addbaseinfo.sbp_std,
         addbaseinfo.sbp_mid,
         addbaseinfo.sbp_25,
         addbaseinfo.sbp_75,
         addbaseinfo.dbp_max,
         addbaseinfo.dbp_min,
         addbaseinfo.dbp_avg,
         addbaseinfo.dbp_std,
         addbaseinfo.dbp_mid,
         addbaseinfo.dbp_25,
         addbaseinfo.dbp_75,
         addbaseinfo.mbp_max,
         addbaseinfo.mbp_min,
         addbaseinfo.mbp_avg,
         addbaseinfo.mbp_std,
         addbaseinfo.mbp_mid,
         addbaseinfo.mbp_25,
         addbaseinfo.mbp_75,
         addbaseinfo.si_max,
         addbaseinfo.si_min,
         addbaseinfo.si_avg,
         addbaseinfo.si_std,
         addbaseinfo.si_mid,
         addbaseinfo.si_25,
         addbaseinfo.si_75,
         addbaseinfo.spo2_max,
         addbaseinfo.spo2_min,
         addbaseinfo.spo2_avg,
         addbaseinfo.spo2_std,
         addbaseinfo.spo2_mid,
         addbaseinfo.spo2_25,
         addbaseinfo.spo2_75,
         addbaseinfo.tem_max,
         addbaseinfo.tem_min,
         addbaseinfo.tem_avg,
         addbaseinfo.tem_std,
         addbaseinfo.tem_mid,
         addbaseinfo.tem_25,
         addbaseinfo.tem_75,
         addbaseinfo.uo_max,
         addbaseinfo.uo_min,
         addbaseinfo.uo_avg,
         addbaseinfo.uo_std,
         addbaseinfo.uo_mid,
         addbaseinfo.uo_25,
         addbaseinfo.uo_75,
         addbaseinfo.uosum,
         addbaseinfo.gcs_max,
         addbaseinfo.gcs_min,
         addbaseinfo.gcs_avg,
         addbaseinfo.gcs_std,
         addbaseinfo.gcs_mid,
         addbaseinfo.gcs_25,
         addbaseinfo.gcs_75,
         addbaseinfo.height,
         addbaseinfo.weight,
         addbaseinfo.vaso,
         addbaseinfo.vent,
         addbaseinfo.age,
         addbaseinfo.gender,
         addbaseinfo.ethnicity,
         addbaseinfo.admission_type,
         addbaseinfo.hospital_expire_flag,
         addbaseinfo.lostime
  FROM addbaseinfo
  WHERE ((addbaseinfo.hr_max IS NOT NULL) OR (addbaseinfo.rr_max IS NOT NULL) OR (addbaseinfo.sbp_max IS NOT NULL) OR
         (addbaseinfo.dbp_max IS NOT NULL) OR (addbaseinfo.mbp_max IS NOT NULL) OR (addbaseinfo.spo2_max IS NOT NULL));

alter materialized view yj_aki_finaleigen
  owner to postgres;

